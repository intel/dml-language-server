name: Build Binaries

permissions:
  actions: write

on:
  workflow_call:
    inputs:
      binary_name:
        description: "Expected name of binary"
        required: false
        type: string
        default: "dls"
      output_binary_name:
        description: "Name of uploaded binary artifact"
        type: string
        default: "dls"
      log-dir:
        description: "Folder to put cargo logs in"
        required: false
        type: string
      os:
        description: "Machine to run on"
        required: true
        type: string
      target:
        description: "Target to build for"
        required: true
        type: string
env:
    CARGO_TERM_COLOR: always
    rust_version: 1.83.0
jobs:
  build:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: versions
        run: |
          rustup default ${{ env.rust_version }}
          rustup --version
          cargo --version
          rustc --version
      - name: Add Rust Target
        run: |
          rustup target add ${{ inputs.target }}
      - name: Log default machine target
        # for comparison
        run: |
          rustc -vV | sed -n 's|host: ||p'
      - name: Prepare log dir
        run: mkdir -p ${{ inputs.log-dir }}
      - name: Build
        shell: bash
        run: cargo build --target=${{ inputs.target }} --release --verbose 2>&1 | tee -a ${{ inputs.log-dir }}/build.log
      - name: Test
        shell: bash
        run: |
          set -o pipefail
          cargo test --target=${{ inputs.target }} --verbose  2>&1 | tee -a ${{ inputs.log-dir }}/test.log
      - name: Clippy
        shell: bash
        if: ${{ success() || failure() }}
        run: |
          set -o pipefail
          rustup component add clippy
          cargo clippy --version
          cargo clippy --all-targets -- --deny warnings 2>&1 | tee -a ${{ inputs.log-dir }}/clippy.log
      - name: Upload logs
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: cargo-logs
          overwrite: true
          path: ${{ inputs.log-dir }}
          if-no-files-found: error
      - name: Upload binary
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.output_binary_name }}
          overwrite: true
          path: target/${{ inputs.target }}/release/${{ inputs.binary_name }}
          if-no-files-found: error
